ARCH		=i386
CROSSC		=
MARCH		=
MCPU		=

GCC		=$(CROSSC)gcc
CC		=$(CROSSC)cc
AS		=$(CROSSC)as
LD		=$(CROSSC)ld
#SM		=$(CROSSC)nasm
OBJCOPY		=$(CROSSC)objcopy

MAKE		=make
SH		=sh
CAT		=cat
DD		=dd
RM		=rm -f
WC		=wc
AR		=ar
SUDO		=sudo
SU		=$(SUDO) su
MOUNT		=$(SUDO) mount
LOSETUP		=$(SUDO) losetup
SUDODD		=$(SUDO) $(DD)
QEMU		=qemu-system-$(ARCH)
BOCHS		=bochsdbg

#INCLUDE		=.
INCLUDE_FLAGS	=$(INCLUDE+-I $(INCLUDE))
CC_OPTIZIME	=-O0#fast
DEBUG_FLAG	=-g
CC_WARNNINGS	=-Wall -Wno-parentheses -Wno-main -Wno-long-long \
		 -Wno-unused-function -Werror=sign-compare -Werror=pedantic \
		 -Wno-unused-parameter -Werror=type-limits -Wno-comment \
		 -Werror=array-bounds -Werror=uninitialized \
		 -Werror=int-to-pointer-cast -Werror=pointer-to-int-cast \
		 -Werror=int-conversion -Werror=incompatible-pointer-types \
		 -Werror=implicit-function-declaration -Werror=implicit-int
CC_DEFINES	=-D_ARCH=$(ARCH) -D_CROSSC=$(CROSSC) -D_CC=$(CC) \
		 -D_KERN_MAKE=1 -D_DEBUG=1
CC_OPTIONS	=-pedantic -W -nostdlib -nostdinc -fomit-frame-pointer \
		 -fno-builtin
AS_FLAGS	=-a $(INCLUDE_FLAGS)
CC_FLAGS	=-c $(CC_OPTIZIME) $(DEBUG_FLAGS) $(CC_OPTIONS) \
		 $(CC_WARNNINGS) $(CC_DEFINES) $(INCLUDE_FLAGS)
LD_FLAGS	=-N -e _start -Ttext 0 $(DEBUG_FLAG)


%.s.o : %.s
	$(AS) $(AS_FLAGS) -o $@ $< > /dev/null

%.c.o : %.c
	$(CC) $(CC_FLAGS) -o $@ $<

#%.asm.o : %.asm
#	$(SM) $(SM_FLAGS) -o $@ $<
#
#%.asm.bin : %.asm
#	$(SM) $(SM_BIN_FLAGS) -o $@ $<

